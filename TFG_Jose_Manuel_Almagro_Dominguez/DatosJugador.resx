<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="recargar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAZ9JREFUOE+d
        k71LA0EQxe+f8A/QQvwARVEMQjpLO9tUVhY2gq2NdlZCBAuLgIUIggEFUYMBRVKIpVgIglXSRMHYxOae
        ++Zu9vY+Iw4Mb3cy87u3l1sPJjrtNiWl371erPbT7+f2qnpFDQQyamXPJqNoptChQvzXY+C5Kuu8XtVM
        h9ZNaxG4LwE38wLE0w7wsBn8FvYmNddhCng5B5xOCxCNNZytDNleVwvfoUAJbC4AJ1NR1iaBiwo+98u2
        VzXXIYN/ikAVZMLuD8aAo6XU8T0dcpM1N2XIQJJ7VEeBvYnYjBxZGs5ngavlYG2CdTbomnV1YWccoNZl
        JYX6jAXqIIEuxFWZocvdEUmtRw4dIIN112GWukAG65FDvmQDfNkatgMEug9IaZ5DCQL5nTUqAmFdgVlQ
        rSd/l5U2yEs2QNyty16B/vt1bKhI4x82XfIYt6vBNTPXzX+rw29tw+88/glqHVpVKG+DSQJxOC7Z/+oM
        hGZePRni8ZmE8SHMsFYETTt01IJDIPf/cqgqwyGouVHK7EnqQIcf3a6s83riCvwCpzpDz2dn6ToAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="Desconectar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAeCAYAAABe3VzdAAAABGdBTUEAALGPC/xhBQAAAYxJREFUWEft
        lt2Kg0AMhed5Ct76/k8jKnpTBFtvXI54SgyT+dPuerEHQvs1J5OQQalbdzVNswV1F3ZWgvprvnSDzrkt
        yDF/Cru+71fEsixbnGEOmOpP4UuvmAOm+qEY3/+KrQRlMYeRG7MYQbGeinHxBnVz5CxG6PpULtqgbMzm
        kMUMyHdeiIs2qJtCyPkGkd7X67XlIHkeZHH2BmXD9/t9yPN36Z+m6VCjz4vxqQEhmZdDUPgua6QfinH2
        FetmlMyRmZc1lMxDFmdtEG/4UCPmdP0wDJ8cztD5EGdtkE04hJUny7yshXz1Ps7aoG4ChfwQWdam+Kms
        DbZt+2mCa4v5JbMOTz4U85MvfYohH8uaFL/k+w+4f0aNZNms67o9a/u3/3SihrL8FDl7g8/n89Aw5pde
        KObXnL1BSDYNNdY+nU/h7A2SdXNEXddrVVXeHGWdR2ku2iDkGyIUsfMsLt4g9Hg8vMPIgCf1PEizG8dx
        RczzvEUJ+wZDpNaHuPiKf4tPXTH0bf7f4Dle1x+tHDQUTw7avAAAAABJRU5ErkJggg==
</value>
  </data>
</root>